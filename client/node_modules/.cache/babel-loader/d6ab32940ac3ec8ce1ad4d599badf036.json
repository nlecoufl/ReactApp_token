{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/ESILV/MONNAIES_NUMERIQUES/TD7_Monnaie_Numerique/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/ESILV/MONNAIES_NUMERIQUES/TD7_Monnaie_Numerique/client/src/components/views/DisplayToken.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nexport default function DisplayToken({\n  web3,\n  contractInstance,\n  counter\n}) {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedId = _useState2[0],\n        setSelectedId = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tokenIds = _useState4[0],\n        setTokenIds = _useState4[1];\n\n  const _useState5 = useState({\n    owner: \"\",\n    name: \"\",\n    uri: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tokenInfo = _useState6[0],\n        setTokenInfo = _useState6[1];\n\n  useEffect(() => {\n    const getData = async () => {\n      // get array of all token Ids (since we index token Ids with counter)\n      let tokenIds = getTokenIds(counter); // if there are any item then get first token data\n\n      let itemInfo = counter ? await getTokenInfo(0) : tokenInfo; // set state\n\n      setTokenIds(tokenIds);\n      setTokenInfo(itemInfo);\n    };\n\n    if (web3) {\n      getData();\n    }\n  }, [web3, contractInstance, counter]);\n\n  const getTokenIds = totalToken => [...Array(Number(totalToken)).keys()];\n\n  const getTokenInfo = async id => {\n    let item = await contractInstance.methods.getItem(id).call();\n    return {\n      owner: item[0],\n      name: item[1],\n      uri: item[2]\n    };\n  };\n\n  const handleChange = async event => {\n    let value = event.target.value;\n    let item = await getTokenInfo(value);\n    setSelectedId(value);\n    setTokenInfo(item);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Total Token: \", tokenIds.length), React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"id\"), React.createElement(Select, {\n    value: selectedId,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, tokenIds.map(tokenId => React.createElement(MenuItem, {\n    key: tokenId,\n    value: tokenId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, tokenId)))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"owner: \", tokenInfo.owner), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"name: \", tokenInfo.name), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"uri:\", \" \", React.createElement(\"a\", {\n    href: tokenInfo.uri,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, tokenInfo.uri)));\n}","map":{"version":3,"sources":["/home/nicolas/Documents/ESILV/MONNAIES_NUMERIQUES/TD7_Monnaie_Numerique/client/src/components/views/DisplayToken.js"],"names":["React","useState","useEffect","FormControl","InputLabel","Select","MenuItem","DisplayToken","web3","contractInstance","counter","selectedId","setSelectedId","tokenIds","setTokenIds","owner","name","uri","tokenInfo","setTokenInfo","getData","getTokenIds","itemInfo","getTokenInfo","totalToken","Array","Number","keys","id","item","methods","getItem","call","handleChange","event","value","target","length","map","tokenId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport default function DisplayToken({ web3, contractInstance, counter }) {\n  const [selectedId, setSelectedId] = useState(0);\n  const [tokenIds, setTokenIds] = useState([]);\n  const [tokenInfo, setTokenInfo] = useState({\n    owner: \"\",\n    name: \"\",\n    uri: \"\"\n  });\n\n  useEffect(() => {\n    const getData = async () => {\n      // get array of all token Ids (since we index token Ids with counter)\n      let tokenIds = getTokenIds(counter);\n      // if there are any item then get first token data\n      let itemInfo = counter ? await getTokenInfo(0) : tokenInfo;\n      // set state\n      setTokenIds(tokenIds);\n      setTokenInfo(itemInfo);\n    };\n\n    if (web3) {\n      getData();\n    }\n  }, [web3, contractInstance, counter]);\n\n  const getTokenIds = totalToken => [...Array(Number(totalToken)).keys()];\n\n  const getTokenInfo = async id => {\n    let item = await contractInstance.methods.getItem(id).call();\n    return {\n      owner: item[0],\n      name: item[1],\n      uri: item[2]\n    };\n  };\n\n  const handleChange = async event => {\n    let value = event.target.value;\n    let item = await getTokenInfo(value);\n    setSelectedId(value);\n    setTokenInfo(item);\n  };\n\n  return (\n    <React.Fragment>\n      <h1>Total Token: {tokenIds.length}</h1>\n      <FormControl>\n        <InputLabel>id</InputLabel>\n        <Select value={selectedId} onChange={handleChange}>\n          {tokenIds.map(tokenId => (\n            <MenuItem key={tokenId} value={tokenId}>\n              {tokenId}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <h3>owner: {tokenInfo.owner}</h3>\n      <h3>name: {tokenInfo.name}</h3>\n      <h3>\n        uri:{\" \"}\n        <a href={tokenInfo.uri} target=\"_blank\" rel=\"noopener noreferrer\">\n          {tokenInfo.uri}\n        </a>\n      </h3>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}