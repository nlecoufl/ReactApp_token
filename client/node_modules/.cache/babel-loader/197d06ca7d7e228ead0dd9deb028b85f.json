{"ast":null,"code":"import _slicedToArray from \"/home/nicolas/Documents/ESILV/MONNAIES_NUMERIQUES/erc721-interface-master/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nicolas/Documents/ESILV/MONNAIES_NUMERIQUES/erc721-interface-master/client/src/components/views/UserToken.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nexport default function UserToken({\n  web3,\n  contractInstance,\n  users\n}) {\n  const _useState = useState({\n    address: \"\",\n    totalToken: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        addressInfo = _useState2[0],\n        setAddressInfo = _useState2[1];\n\n  useEffect(() => {\n    const getData = async () => {\n      // if at least one address bought a token then get item data\n      if (users.length) {\n        let totalToken = await getTotalToken(users[0]);\n        setAddressInfo({\n          address: users[0],\n          totalToken: totalToken\n        });\n      }\n    };\n\n    if (web3) {\n      getData();\n    }\n  }, [web3, contractInstance, users]);\n  /**\n   * get total token of given address\n   * @{string} address - array containing all addresses\n   */\n\n  const getTotalToken = address => {\n    return contractInstance.methods.balanceOf(address).call();\n  };\n\n  const handleChange = async event => {\n    let value = event.target.value;\n    let totalToken = await getTotalToken(value);\n    setAddressInfo({\n      address: value,\n      totalToken: totalToken\n    });\n  };\n\n  const address = addressInfo.address,\n        totalToken = addressInfo.totalToken;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"address\"), React.createElement(Select, {\n    value: address,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, users.map(address => React.createElement(MenuItem, {\n    key: address,\n    value: address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, address)))), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Address \", address), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Total token: \", totalToken));\n}","map":{"version":3,"sources":["/home/nicolas/Documents/ESILV/MONNAIES_NUMERIQUES/erc721-interface-master/client/src/components/views/UserToken.js"],"names":["React","useState","useEffect","FormControl","InputLabel","Select","MenuItem","UserToken","web3","contractInstance","users","address","totalToken","addressInfo","setAddressInfo","getData","length","getTotalToken","methods","balanceOf","call","handleChange","event","value","target","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,gBAAR;AAA0BC,EAAAA;AAA1B,CAAnB,EAAsD;AAAA,oBAC7BT,QAAQ,CAAC;AAC7CU,IAAAA,OAAO,EAAE,EADoC;AAE7CC,IAAAA,UAAU,EAAE;AAFiC,GAAD,CADqB;AAAA;AAAA,QAC5DC,WAD4D;AAAA,QAC/CC,cAD+C;;AAMnEZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,OAAO,GAAG,YAAY;AAC1B;AACA,UAAIL,KAAK,CAACM,MAAV,EAAkB;AAChB,YAAIJ,UAAU,GAAG,MAAMK,aAAa,CAACP,KAAK,CAAC,CAAD,CAAN,CAApC;AACAI,QAAAA,cAAc,CAAC;AACbH,UAAAA,OAAO,EAAED,KAAK,CAAC,CAAD,CADD;AAEbE,UAAAA,UAAU,EAAEA;AAFC,SAAD,CAAd;AAID;AACF,KATD;;AAWA,QAAIJ,IAAJ,EAAU;AACRO,MAAAA,OAAO;AACR;AACF,GAfQ,EAeN,CAACP,IAAD,EAAOC,gBAAP,EAAyBC,KAAzB,CAfM,CAAT;AAiBA;;;;;AAIA,QAAMO,aAAa,GAAGN,OAAO,IAAI;AAC/B,WAAOF,gBAAgB,CAACS,OAAjB,CAAyBC,SAAzB,CAAmCR,OAAnC,EAA4CS,IAA5C,EAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClC,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AACA,QAAIX,UAAU,GAAG,MAAMK,aAAa,CAACM,KAAD,CAApC;AACAT,IAAAA,cAAc,CAAC;AACbH,MAAAA,OAAO,EAAEY,KADI;AAEbX,MAAAA,UAAU,EAAEA;AAFC,KAAD,CAAd;AAID,GAPD;;AA/BmE,QAwC3DD,OAxC2D,GAwCnCE,WAxCmC,CAwC3DF,OAxC2D;AAAA,QAwClDC,UAxCkD,GAwCnCC,WAxCmC,CAwClDD,UAxCkD;AA0CnE,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,OAAf;AAAwB,IAAA,QAAQ,EAAEU,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACe,GAAN,CAAUd,OAAO,IAChB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAf;AAAwB,IAAA,KAAK,EAAEA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OADH,CADD,CADH,CAFF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaA,OAAb,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBC,UAAlB,CAZF,CADF;AAgBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport default function UserToken({ web3, contractInstance, users }) {\n  const [addressInfo, setAddressInfo] = useState({\n    address: \"\",\n    totalToken: 0\n  });\n\n  useEffect(() => {\n    const getData = async () => {\n      // if at least one address bought a token then get item data\n      if (users.length) {\n        let totalToken = await getTotalToken(users[0]);\n        setAddressInfo({\n          address: users[0],\n          totalToken: totalToken\n        });\n      }\n    };\n\n    if (web3) {\n      getData();\n    }\n  }, [web3, contractInstance, users]);\n\n  /**\n   * get total token of given address\n   * @{string} address - array containing all addresses\n   */\n  const getTotalToken = address => {\n    return contractInstance.methods.balanceOf(address).call();\n  };\n\n  const handleChange = async event => {\n    let value = event.target.value;\n    let totalToken = await getTotalToken(value);\n    setAddressInfo({\n      address: value,\n      totalToken: totalToken\n    });\n  };\n\n  const { address, totalToken } = addressInfo;\n\n  return (\n    <React.Fragment>\n      <FormControl>\n        <InputLabel>address</InputLabel>\n        <Select value={address} onChange={handleChange}>\n          {users.map(address => (\n            <MenuItem key={address} value={address}>\n              {address}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <h3>Address {address}</h3>\n      <h3>Total token: {totalToken}</h3>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}